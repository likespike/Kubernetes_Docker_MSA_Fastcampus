Part3. 쿠버네티스 입문


<Ch1. 처음 만나는 쿠버네티스>
* 쿠버네티스란 무엇인가 - 클러스터 구성요소와 쿠버네티스 오브젝트
https://kubeernetes.io/ko/docs/home/ 참고할 것

https://github.com/yoonjeong-kwon/fastcampus-kubernetes

컨테이너 = 경량화된 프로세스 
컨테이너 관리 시스템임 (리소스 활용도, 비용 절감)
Google에서 만듬 (Borg -> Omega -> Kubernetes)
마이크로 서비스 배포 관리 - 마이크로서비스를 어떤 서버에 어떻게 배포할 것인가?
서비스 디스커버리
컨테이너로 향상된 리소스 활용의 이점을 누리면서도 복잡한 분산 시스템을 쉽게 배포하고 관리할 수 있게 만드는 것

서버 클러스터 - 각기 다른 서버들을 하나로 묶어서 하나의 시스템같이 동작하게 함으로써, 클라이언트들에게 고가용성의 서비스를 제공하는 것

쿠버네티스 클러스터 - 쿠버네티스가 관리하는 서버들의 집합, 애플리케이션 컨테이너를 배포하기 위한 서버 집합
 
Manifest 파일 - 작업 지시서
   
* GCP를 이용해 N개 노드를 쿠버네티스 클러스터로 구성
쿠버네티스 클러스터 구성 및 실습준비
https://cloud.google.com/

cloudshell - cloud (=Google SDK) / kubectl 이미 설치 되어 있음

gcloud container clugsters get-credentials my-cluster --zone us-central1-c --project norse-voice-369104

kubectl get pod

cat ~/.kube/config

로컬 머신에 gcloud와 kubectl 설치하기 -> 링크 참조
https://cloud.google.com/sdk/docs/install#installation_instructions

./google-cloud-sdk/install.sh

gcloud 초기화하기
./google-cloud-sdk/bin/gcloud init

(선택) path 추가
PATH=$PATH://Users/Spike/Downloads/google-cloud-sdk/bin

https://kubernetes.io/kr/docs/tasks/tools/#kubectl

./google-cloud-idk/bin/gcloud init

https://kubernetes.io/ko/docs/tasks/tools/#kubectl

최신 릴리드 다운로드
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl"
   
바이너리 검증(선택 사항)
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256"

echo "$(cat kubectl.sha256)  kubectl" | shasum -a 256 --check
-> kubectl: OK 나오면 검증 성공!

동일하게 인증 명령어 실행
/Users/Spike/Downloads/google-cloud-sdk/bin/gcloud container clusters get-credentials my-cluster --zone us-central1-c --project norse-voice-369104

*위 사항에 다음과 같은 에러가 날시
CRITICAL: ACTION REQUIRED: gke-gcloud-auth-plugin, which is needed for continued use of kubectl, was not found or is not executable. Install gke-gcloud-auth-plugin for use with kubectl by following https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke

참고
https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke?hl=en

인증
/Users/Spike/Downloads/google-cloud-sdk/bin/gcloud components install gke-gcloud-auth-plugin

kubectl get pod 으로 접속 여부 체크

VS Code 설치 -> Kubernetes 플러그인 설치


쿠버네티스 오브젝트(=리소스) 개념
표현 방식 : YAML 형식
전달 방식 : REST API

어떤 애플리케이션을 -- Pod
얼마나  -- ReplicaSet
어디에  -- Node, Namespace
어떤 방식으로 배포할 것인가  -- Deployment
트래픽을 어떻게 로드밸런싱할 것인다  -- Service, Endpoints

로그 안 뜨면, logs으로 pod replicas 중에 어떤 것에 접속하는지 살펴보고, port forwarding을 그 replicas로 해주면 됨

*gcp-auth-plugin 버전 업그레이드 방법
WARNING: the gcp auth plugin is deprecated in v1.22+, unavailable in v1.26+; use gcloud instead.

참조
https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke?hl=en

gcloud components install gke-gcloud-auth-plugin

버전확인
gke-gcloud-auth-plugin --version

cat ~/.bashrc
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

source ~/.bashrc

gcloud components update

gcloud container clusters get-credentials CLUSTER_NAME
gcloud container clusters get-credentials my-cluster


 

<Ch2. Pod과 친해지기>
목표 - 노드에 Pod 배포 방벙 / 컨테이너, Pod 간 네트워킹 방법

01. Pod 소개
* Pod 개념과 특징
여러 컨테이너를 감싸고 있는 콩껍질과 같다
Pod Replicas를 여러 노드에 복사해서 배포할 수 있다
클러스터 외부 트래픽을 받기 위해서는 Service 혹은 Ingress 오브젝트가 필요함
  
* Pod Pod, Container - Container 간 통신 방법


* Pod 스케일 아웃과 Container 설계


* Pod이 노드에 배포되는 과정과 클러스터 구성 요소별 역할


* Pod 오브젝트 표현 방법


* Pod의 한계점과 보완 방법


02. [실습] Pod - 컨테이너로 환경변수 전달
목표
- Pod YAML 파일에 컨테이너에서 사용할 환경변수를 선언한다
- Pod 실행 후 컨테이너에 접속하여 선언한 환경변수가 설정되었는지 확인한다.

 순서
Pod 선언과 환경변수 설정
Pod 생성/배포
Pull image
Pod IP 할당 및 컨테이너 실행 확인
Port-forward 3000:3000
Pod으로 트래픽을 전송
HTTP 서버 응답 확인
컨테이너 환경변수 목록 환인
 
*error
replicaset이나 deployment로 생성한 리소스는 지워지지 않는데, 상위 오브젝트 지워야 종료 됨
kubectl delete deployments nginx-deployment 

 
03. [실습] Pod - Pod과 컨테이너들간의 통신
kubectl config current-context


04. Label과 Selector 소개
* Label과 Selector란 무엇인가?

* Label과 Selector가 왜 필요한가?

* Label과 Selector 활용법


05. [실습] Pod - Lab과 Selector


06. [실습] Pod - nodfeSelector로 선택한 노드집합에 Pod 배포
* 노드에 Label 추가 -> Pod YAML 파일에 spec.nodeSelector를 선언

순서
노드정보조회
kubectl get node

노드에 Label 추가
kubectl label nod gke-8bbe0b49-0g80 gee-8bbe0b49-bk10 soil=moist
kubectl label nod gke-8bbe0b49-0g80 gee-8bbe0b49-75xs soil=dry

Label 키값 조회
kubectl get node -L soil





<Ch3. Pod 복제와 배포에 날개달기>
목표
쿠버네티스 리소스로 가용성과 내결함성
N개 Pod 배포를 위한 쿠버네티스 배포 전략 (Rolling Update, Recreate)

01. ReplicaSet 소개
* ReplicaSet 개념과 특징


* ReplicaSet 필요성


* ReplicaSet 오브젝트 표현 방법


02. [실습] ReplicaSet - Pod 복제를 위해 태어난 ReplicaSet

 03. [실습]  ReplicaSet - Pod 종료 시 ReplicaSet 행동 실험

04. [실습] ReplicaSet - Pod Template 변경

05. [실습] ReplicaSet - 손쉽게 Pod  개수 조정

06. [실습] ReplicaSet - Pod Template 이미지 변경을 통한 롤백

07. Deployment 소개
Pod 배포 자동화를 위한 오브젝트 (ReplicaSet + 배포전략)
   
08. [실습] Deployment - Pod 배포를 손쉽게
kubectl explain deployment
(정보 볼 수 있음, 또 apply 안 될 경우, yaml 파일 작성이 뭐가 틀렸는지도 알 수 있음)

09 [실습] Deployment - 개발할 땐 Recreate 배포

10 [실습] Deployment - 운영할 땐 안정적인 Rolling Update 배포

11 [실습] Deployment - Revision과 Annotation을 활용한 롤백




<Ch4. 쿠버네티스로 서비스 운영하기>
쿠버네티스에서 로드밸런싱 (부하분산)
컨테이너 헬스체크 메커니즘 - liveness, readiness

01. Service 소개
IP 자주 바뀜
Pod 집단에 단일 엔드 포인트 제공 필요성
외부 접속 가능해야 함

Endpoints
 
클러스터 내부 통신방법 두 가지
Service Ip or Service Name
= 환경변수 or 쿠버네티스 DNS 서버

  
02. [실습] Service - ClusterIP 서비스로 Pod 노출하는 방법
 “ 더블쿼테이션
{ 오브젝트

03. [실습] Service - NordPort 서비스로 Pod 노출하는 방법

04. [실습] Service - LoadBalancer 서비스로 Pod 노출하는 방법

05. Ingress와 Ingress Controller 소개

06. [실습] Ingress - 여러 Service를 단일 IP로 노출하는 방법

07. [실습] Pod livenessProbe와 컨테이너 재시작

08. [실습] 준비된 Pod으로 로드밸런싱 (readinessProbe)

09. [실습] ConfigMap으로 App 설정파일을 외부화

10. [실습] Secret으로 민감 데이터 관리하기


Ch5. 쿠버네티스 도전
지금까지 배운 내용을 하나의 실습으로
블루그린, 카나리 배포 환경 구성




Part5. 운영자를 위한 쿠버네티스

Ch1. Kubernetes 운영 환경 구성

Ch2. Kubernetes 구축

01 

02
Eksctl

03 Google Cloud GKE
Google Kubernetes Engine
Google Cloud의 관리형 쿠버네티스 서비스
생성된 노드는 GCE에서도 보임(Google Compute Engine)
 
04 Azure AKS
Azure Kubernetes Service
마스터 노드에 대한 비용 무료
워커 노드에 대한 비용만 발생(VM)


05 Naver Cloud Platform Kubernstes
 
06 베어메탈에 쿠버네티스 설치하기
On-premise 자체구축
  
Kubeadm - CLI tool (프로젝트)
Kubespray
Cluster-API

07 Kubeadm
 노드 구성에 대해서만 관여함
컴포넌트 등은 X

마스터노드: kubeadm init
워커노드: kubeadm join

kubeadm certs 기능 (인증서 기능)

kubeadm token
쿠버네티스 노드 추가시 사용하는 토큰 관리
 

08 kubespray
다수의 노드를 설치/관리할 때 유용


09 cluster-api를 이용한 Kubernetes in Kubernetes
kubeadm은 노드 설치
kubeadm은 다중 노드 설치
cluster-api는 노드 모니터링 및 클러스터 구성 이후 관리까지

https://github.com/kubernetes-sigs/cluster-api

쿠버네티스 리소스로서 쿠버네티스 관리
(클러스터를 생성 설치 조회 등이 가능한다는 의미임)

cluster-api 아키텍쳐
controller와 CRD로 구성되어 있음



10 [실습] Kubeadm를 통해 Kubernetes 구축하기 



gcloud 설치 및 초기화
curl https://sdk.cloud.google.com | bash
exec -l $SHELL - shell 다시 시작
gcloud config list - 설정 내용 확인
gcloud init - google cloud CLI 환경 초기화

gcloud network 설정
